/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2024-12-19 05:03:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.User;
import model.SelpMessage;
import model.SelpImg;
import java.util.List;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.SelpImg");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.User");
    _jspx_imports_classes.add("model.SelpMessage");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"./js/script.js\"></script>\n");

// セッションスコープに保存されたユーザー情報を取得
User loginUser = (User)session.getAttribute("loginUser");
// アプリケーションスコープに保存されたユーザー情報を取得
List<SelpMessage> messageList = 
(List<SelpMessage>)application.getAttribute("messageList");
					// アプリケーションスコープに保存されたイメージ画像URLを取得
List<SelpImg> selpImgList =
(List<SelpImg>)application.getAttribute("selpImgList");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<!-- // メイン画面を出力するビュー -->\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>SelpPoint</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1>SelpPoint</h1>\n");
      out.write("<!-- 現在の日時 -->\n");
      out.write("<div id=\"current_date\">\n");
      out.write("    <script>\n");
      out.write("        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n");
      out.write("        document.getElementById(\"current_date\").innerHTML = new Date().toLocaleDateString('ja-JP', options);\n");
      out.write("    </script>\n");
      out.write("</div>\n");
      out.write("<p>現在位置: 緯度 = ");
      out.print( request.getAttribute("latitude") );
      out.write(", 経度 = ");
      out.print( request.getAttribute("longitude") );
      out.write("</p>\n");
      out.write("\n");
      out.write("<!--   <h1>逆ジオコーディング</h1>\n");
      out.write("  <button onclick=\"getLocation()\">位置情報を取得</button>\n");
      out.write("  <p>住所: <span id=\"address\">住所が表示されます</span></p>\n");
      out.write("  <form id=\"locationForm\">\n");
      out.write("    <input type=\"hidden\" id=\"latitude\" name=\"latitude\">\n");
      out.write("    <input type=\"hidden\" id=\"longitude\" name=\"longitude\">\n");
      out.write("  </form> -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<p>\n");
      out.print( loginUser.getName() );
      out.write("さん、ログイン中\n");
      out.write("<a href=\"Logout\">ログアウト</a>\n");
      out.write("</p>\n");
      out.write("<p><a href=\"Main\">更新</a></p>\n");
      out.write("\n");
      out.write("<div>\n");
      out.write("<form action=\"Main\" method=\"post\" id=\"locationForm1\">\n");
      out.write("  <input id=\"image_a\" type=\"radio\" value=\"stamp_sukkiri-01.png\" name=\"selpImg\">\n");
      out.write("  <label for=\"image_a\"><img src=\"./images/stamp_sukkiri-01.png\" width=\"100\" height=\"100\"></label>\n");
      out.write("  <input id=\"image_b\" type=\"radio\" value=\"stamp_sukkiri-02.png\" name=\"selpImg\">\n");
      out.write("  <label for=\"image_b\"><img src=\"./images/stamp_sukkiri-02.png\" width=\"100\" height=\"100\"></label>\n");
      out.write("  <input id=\"image_c\" type=\"radio\" value=\"stamp_sukkiri-05.png\" name=\"selpImg\">\n");
      out.write("  <label for=\"image_c\"><img src=\"./images/stamp_sukkiri-05.png\" width=\"100\" height=\"100\"></label>\n");
      out.write("  <input id=\"image_d\" type=\"radio\" value=\"stamp_sukkiri-07.png\" name=\"selpImg\">\n");
      out.write("  <label for=\"image_d\"><img src=\"./images/stamp_sukkiri-07.png\" width=\"100\" height=\"100\"></label>\n");
      out.write("  <input id=\"image_e\" type=\"radio\" value=\"stamp_sukkiri-08.png\" name=\"selpImg\">\n");
      out.write("  <label for=\"image_e\"><img src=\"./images/stamp_sukkiri-08.png\" width=\"100\" height=\"100\"></label>\n");
      out.write("  <input id=\"image_f\" type=\"radio\" value=\"stamp_sukkiri-24.png\" name=\"selpImg\">\n");
      out.write("  <label for=\"image_f\"><img src=\"./images/stamp_sukkiri-24.png\" width=\"100\" height=\"100\"></label>\n");
      out.write("  <!-- レンジスライダー -->\n");
      out.write("  <br>[今の気分]もう無理<input type=\"range\" name=\"mentalValue\" min=\"0\" max=\"100\" value=\"100\">快調\n");
      out.write("  <!-- ボタン -->\n");
      out.write("\n");
      out.write("  <input type=\"hidden\" id=\"latitude\" name=\"latitude\">\n");
      out.write("  <input type=\"hidden\" id=\"longitude\" name=\"longitude\">\n");
      out.write("  <br><input type=\"submit\" value=\"イメージを投稿\" onclick=\"getLocation();\">\n");
      out.write("\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<br><form action=\"Main\" method=\"post\" id=\"locationForm2\">\n");
      out.write("<select name=\"selectText\">\n");
      out.write("	<option value=\"元気です!\">元気です！</option>\n");
      out.write("	<option value=\"普通です。\">普通</option>\n");
      out.write("	<option value=\"いまいちです。\">いまいち</option>\n");
      out.write("	<option value=\"不調です。\">不調</option>\n");
      out.write("	<option value=\"病院行ってきます。\">病院行ってきます</option>\n");
      out.write("</select>\n");
      out.write("\n");
      out.write("<input type=\"text\" name=\"text\">\n");
      out.write("<input type=\"hidden\" id=\"latitude\" name=\"latitude\">\n");
      out.write("<input type=\"hidden\" id=\"longitude\" name=\"longitude\">\n");
      out.write("<input type=\"submit\" value=\"メッセージ\" onclick=\"getLocation()\">\n");
      out.write("\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("\n");
 for (SelpMessage selpMessage : messageList) {
      out.write('\n');
      out.write('	');
 if (selpMessage.getText() != null) { 
      out.write("\n");
      out.write("		<p>");
      out.print( selpMessage.getUserName() );
      out.write(' ');
      out.write(':');
      out.write(' ');
      out.print( selpMessage.getText() );
      out.write("\n");
      out.write("		<small>(");
      out.print( new java.text.SimpleDateFormat("yyyy/MM/dd HH:mm").format(selpMessage.getPostDate()) );
      out.write(")</small>\n");
      out.write("		</p>\n");
      out.write("		<small>");
      out.print( selpMessage.getGeometry() );
      out.write("</small>\n");
      out.write("	");
 } else { 
      out.write('	');
      out.write('\n');
      out.write('	');
 } 
      out.write('\n');
 } 
      out.write('\n');
 for (SelpImg selpImg : selpImgList) {
      out.write('\n');
      out.write('	');
 if (selpImg.getSelpImg() != null) { 
      out.write("\n");
      out.write("		<p>");
      out.print( selpImg.getUserName() );
      out.write(" : <img src=\"./images/");
      out.print( selpImg.getSelpImg() );
      out.write("\" width=\"100\" height=\"100\">\n");
      out.write("		メンタル");
      out.print( selpImg.getMentalValue() );
      out.write("\n");
      out.write("		<small>(");
      out.print( new java.text.SimpleDateFormat("yyyy/MM/dd HH:mm").format(selpImg.getPostDate()) );
      out.write(")</small>\n");
      out.write("		</p>\n");
      out.write("		<small>");
      out.print( selpImg.getGeometry() );
      out.write("</small>\n");
      out.write("	");
 } else { 
      out.write('\n');
      out.write('	');
 } 
      out.write('\n');
 } 
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
